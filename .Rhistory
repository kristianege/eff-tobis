otor1 <- oto%>%ungroup(.)%>%filter(measured_radius==1)%>%mutate(radius=radius_1_length)
otor2 <- oto%>%ungroup(.)%>%filter(measured_radius==2)%>%mutate(radius=radius_2_length)
oto<-rbind(otor1,otor2)
remove(otor1,otor2)
source("zero_to_na.R")
oto<-oto%>%ungroup(.)%>%filter(dist_btw_markers>0.5)
#Distance from center to dayring (marker) is calculated from distance between markers, relevant columns selected
oto1 <-  oto %>%
group_by(pic_id,measured_radius)%>%
arrange(pic_id,measured_radius,mark_no)%>%
mutate(
dist_to_center = cumsum(dist_btw_markers),
dist_to_center = lag(dist_to_center, default = NA),
dist_btw_markers = zero_to_na(dist_btw_markers)) %>%
filter(!is.na(dist_btw_markers),!is.na(dist_to_center))%>%  #removes center to 2nd mark dist and last mark with dist = 0
select(larvae_id,pic_id,KorTobis_sample_id,measured_radius,mark_no,dist_to_center,dist_btw_markers,dist_sec_growth_center,radius,radius_1_length,radius_2_length,x_position,y_position,magnification)
######removes distances more than 1.8 times the next value, in theory this should only be run 1 time, after removal of faulty points#
oto2<-oto1%>%
group_by(pic_id,measured_radius)%>%
filter(dist_btw_markers  < 1.8 * lead(dist_btw_markers, default = Inf))%>%
filter(dist_btw_markers<9,dist_to_center<160)
oto2<-tbl_df(oto2) #makes it at local data.frame
remove(oto,oto1,oto_raw)
source("raw-larvae-otolith-data-manipulation.R")
source("raw-larvae-otolith-data-manipulation-1.R")
source("raw-larvae-otolith-data-manipulation-1.R")
source("mytry6.R")
source("raw-larvae-otolith-data-manipulation-1.R")
source("mytry6.R")
source("raw-larvae-otolith-data-manipulation-1.R")
#source("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-scripts\\cleaned_workup_rad1_rad2.R")
oto_rad1 <- filter(ALL_DATA2,measured_radius==1)
oto_rad2 <- filter(ALL_DATA2, measured_radius==2)
#subset and select columns
oto1v<-subset(oto_rad1,right_left=="v",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto1v)<-c("larvae_id","pic_id_1_v","int_1_v", "slope_1_v", "r2_1_v", "n_1_v", "radius_1_v", "age_1_v")
oto1h<-subset(oto_rad1,right_left=="h",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto1h)<-c("larvae_id","pic_id_1_h","int_1_h", "slope_1_h", "r2_1_h", "n_1_h", "radius_1_h", "age_1_h")
oto2v<-subset(oto_rad2,right_left=="v",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto2v)<-c("larvae_id","pic_id_2_v","int_2_v", "slope_2_v", "r2_2_v", "n_2_v", "radius_2_v", "age_2_v")
oto2h<-subset(oto_rad2,right_left=="h",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto2h)<-c("larvae_id","pic_id_2_h","int_2_h", "slope_2_h", "r2_2_h", "n_2_h", "radius_2_h", "age_2_h")
#list of larvae names
larvae<-unique(oto_raw$larvae_id)
larvae<-as.data.frame(larvae)
colnames(larvae)<-c("larvae_id")
temp1<-merge(larvae,oto1v,by="larvae_id",all.x=TRUE)
#dim(temp1)
temp2<-merge(temp1,oto1h,by="larvae_id",all.x=TRUE)
#dim(temp2)
temp3<-merge(temp2,oto2v,by="larvae_id",all.x=TRUE)
#dim(temp3)
temp4<-merge(temp3,oto2h,by="larvae_id",all.x=TRUE)
temp4$KorTobis_sample_id<-substr(temp4$larvae_id,1,14)
ALL_DATA_larvae_id<-temp4
#View(ALL_DATA_larvae_id)
#
# meta<-subset(meta, select=c("KorTobis_sample_id","year","monthh","dayy","posixct_time","stlondec","stlatdec"))
# colnames(meta)<-c("KorTobis_sample_id","styear","stmonthh","stdayy","stposixct_time","stlondec","stlatdec")
# meta$st_day_of_year<-(as.POSIXlt(as.character(meta$stposixct_time),format="%Y%m%d")$yday)+1
# meta$st_R_dates<-as.Date(as.character(meta$stposixct_time),format='%Y%m%d')
# meta<-subset(meta,select=c("KorTobis_sample_id","styear","stmonthh","stdayy","st_day_of_year","st_R_dates","stlondec","stlatdec"))
#
# ALL_DATA_larvae_id<-merge(temp4,meta,all.x=TRUE)
# ALL_DATA_larvae_id<-merge(ALL_AGE_DATA,larvaelength2,all.x=TRUE)
#
#
# #factorices the year column, to avoid cleanup...
# ALL_AGE_DATA$styear<-as.factor(ALL_AGE_DATA$styear)
#
# clean<-function(x){
#   if(is.numeric(x))x[(x>1000)|(x==-999)] <- NA
#   x
# }
# ALL_AGE_DATA<-as.data.frame(lapply(ALL_AGE_DATA,clean))
#
#
# #write.csv(ALL_AGE_DATA,file="C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\ALL_AGE_DATA.csv",row.names=FALSE)
# ALL_AGE_DATA<-read.csv("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\ALL_AGE_DATA.csv")
# names(ALL_AGE_DATA)
# #OptimalAgeDATA<-subset(ALL_AGE_DATA,select=c("larvae_id","KorTobis_sample_id","styear","stmonthh","stdayy","st_day_of_year","st_R_dates","stlondec","stlatdec","larvae_tlgd", "larvaer_sd_lgd") )
#
#
# qplot(slope_1_v,slope_2_v,data=ALL_AGE_DATA)
# fit <- lm(slope_1_v~slope_2_v, data = ALL_AGE_DATA)
# summary(fit)
#
# qplot(age_1_v,age_2_v,data=ALL_AGE_DATA)
# fit <- lm(age_1_v~age_2_v, data = ALL_AGE_DATA)
# summary(fit)
#
# qplot(age_1_v,age_1_h,data=ALL_AGE_DATA)
# fit<-lm(age_1_h~age_1_v-1,data=ALL_AGE_DATA)
# summary(fit)
#
# qplot(radius_1_v,slope_1_v,data=ALL_AGE_DATA)
# names(ALL_AGE_DATA)
# qplot(hatch_day_of_year_1_h,geom="density",data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(hatch_day_of_year_1_v,geom="density",data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(age_1_v,larvae_tlgd,data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(age_1_h,larvaer_sd_lgd,data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(larvaer_sd_lgd,larvae_tlgd,data=ALL_AGE_DATA)
# qplot(larvaer_sd_lgd,slope_1_v,data=ALL_AGE_DATA,colour=factor(styear))
# qplot(larvaer_sd_lgd,slope_1_h,data=subset(ALL_AGE_DATA,styear==2006),colour=factor(styear))
# qplot(larvaer_sd_lgd,slope_1_h,data=subset(ALL_AGE_DATA,styear==2006),colour=factor(styear))
#
View(larvae)
View(larvae)
#source("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-scripts\\cleaned_workup_rad1_rad2.R")
oto_rad1 <- filter(ALL_DATA2,measured_radius==1)
oto_rad2 <- filter(ALL_DATA2, measured_radius==2)
#subset and select columns
oto1v<-subset(oto_rad1,right_left=="v",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto1v)<-c("larvae_id","pic_id_1_v","int_1_v", "slope_1_v", "r2_1_v", "n_1_v", "radius_1_v", "age_1_v")
oto1h<-subset(oto_rad1,right_left=="h",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto1h)<-c("larvae_id","pic_id_1_h","int_1_h", "slope_1_h", "r2_1_h", "n_1_h", "radius_1_h", "age_1_h")
oto2v<-subset(oto_rad2,right_left=="v",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto2v)<-c("larvae_id","pic_id_2_v","int_2_v", "slope_2_v", "r2_2_v", "n_2_v", "radius_2_v", "age_2_v")
oto2h<-subset(oto_rad2,right_left=="h",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto2h)<-c("larvae_id","pic_id_2_h","int_2_h", "slope_2_h", "r2_2_h", "n_2_h", "radius_2_h", "age_2_h")
#list of larvae names
larvae<-unique(oto_raw$larvae_id)
larvae<-as.data.frame(larvae)
colnames(larvae)<-c("larvae_id")
temp1<-merge(larvae,oto1v,by="larvae_id",all.x=TRUE)
#dim(temp1)
temp2<-merge(temp1,oto1h,by="larvae_id",all.x=TRUE)
#dim(temp2)
temp3<-merge(temp2,oto2v,by="larvae_id",all.x=TRUE)
#dim(temp3)
temp4<-merge(temp3,oto2h,by="larvae_id",all.x=TRUE)
temp4$KorTobis_sample_id<-substr(temp4$larvae_id,1,14)
ALL_DATA_larvae_id<-temp4
#View(ALL_DATA_larvae_id)
#
# meta<-subset(meta, select=c("KorTobis_sample_id","year","monthh","dayy","posixct_time","stlondec","stlatdec"))
# colnames(meta)<-c("KorTobis_sample_id","styear","stmonthh","stdayy","stposixct_time","stlondec","stlatdec")
# meta$st_day_of_year<-(as.POSIXlt(as.character(meta$stposixct_time),format="%Y%m%d")$yday)+1
# meta$st_R_dates<-as.Date(as.character(meta$stposixct_time),format='%Y%m%d')
# meta<-subset(meta,select=c("KorTobis_sample_id","styear","stmonthh","stdayy","st_day_of_year","st_R_dates","stlondec","stlatdec"))
#
# ALL_DATA_larvae_id<-merge(temp4,meta,all.x=TRUE)
# ALL_DATA_larvae_id<-merge(ALL_AGE_DATA,larvaelength2,all.x=TRUE)
#
#
# #factorices the year column, to avoid cleanup...
# ALL_AGE_DATA$styear<-as.factor(ALL_AGE_DATA$styear)
#
# clean<-function(x){
#   if(is.numeric(x))x[(x>1000)|(x==-999)] <- NA
#   x
# }
# ALL_AGE_DATA<-as.data.frame(lapply(ALL_AGE_DATA,clean))
#
#
# #write.csv(ALL_AGE_DATA,file="C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\ALL_AGE_DATA.csv",row.names=FALSE)
# ALL_AGE_DATA<-read.csv("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\ALL_AGE_DATA.csv")
# names(ALL_AGE_DATA)
# #OptimalAgeDATA<-subset(ALL_AGE_DATA,select=c("larvae_id","KorTobis_sample_id","styear","stmonthh","stdayy","st_day_of_year","st_R_dates","stlondec","stlatdec","larvae_tlgd", "larvaer_sd_lgd") )
#
#
# qplot(slope_1_v,slope_2_v,data=ALL_AGE_DATA)
# fit <- lm(slope_1_v~slope_2_v, data = ALL_AGE_DATA)
# summary(fit)
#
# qplot(age_1_v,age_2_v,data=ALL_AGE_DATA)
# fit <- lm(age_1_v~age_2_v, data = ALL_AGE_DATA)
# summary(fit)
#
# qplot(age_1_v,age_1_h,data=ALL_AGE_DATA)
# fit<-lm(age_1_h~age_1_v-1,data=ALL_AGE_DATA)
# summary(fit)
#
# qplot(radius_1_v,slope_1_v,data=ALL_AGE_DATA)
# names(ALL_AGE_DATA)
# qplot(hatch_day_of_year_1_h,geom="density",data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(hatch_day_of_year_1_v,geom="density",data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(age_1_v,larvae_tlgd,data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(age_1_h,larvaer_sd_lgd,data=ALL_AGE_DATA,colour=factor(styear))+theme_classic()
# qplot(larvaer_sd_lgd,larvae_tlgd,data=ALL_AGE_DATA)
# qplot(larvaer_sd_lgd,slope_1_v,data=ALL_AGE_DATA,colour=factor(styear))
# qplot(larvaer_sd_lgd,slope_1_h,data=subset(ALL_AGE_DATA,styear==2006),colour=factor(styear))
# qplot(larvaer_sd_lgd,slope_1_h,data=subset(ALL_AGE_DATA,styear==2006),colour=factor(styear))
#
oto_rad1 <- filter(ALL_DATA2,measured_radius==1)
###
# load the function "all_model_info.R" used to extract all model information from
# the linear models between distance to centre of otolith and the ringwidth
# this supplies among a lot of other model information handy for evaluation the
# slope and intercept for further use and selection. The function extracts the
# model values from the lm list object and puts them into a more handy dataframe
# format.
###
source("all_model_info.R")
library(broom)
# If you want to filter edge of otholith ----------------------------------
temp1<-oto2%>%filter(measured_radius==1, dist_to_center <= 0.90*radius_1_length)
temp2<-oto2%>%filter(measured_radius==2, dist_to_center <= 0.90*radius_2_length)
oto_no_edge <- rbind(temp1,temp2)
remove(temp1,temp2)
# Filter by intercept window at 20mu distance to center--------------------
winmax <- max(oto2%>%ungroup()%>%filter(dist_to_center<21,dist_to_center>19)%>%select(dist_btw_markers))
winmin <- min(oto2%>%ungroup()%>%filter(dist_to_center<21,dist_to_center>19)%>%select(dist_btw_markers))
oto_dist_minus_20<-oto_no_edge%>%mutate(dist_to_center=dist_to_center-20)
minus20<-all_model_info(oto_dist_minus_20,c("pic_id","measured_radius"),"dist_btw_markers","dist_to_center")
inc_fit<-minus20%>%filter(inc_estimate< winmax,inc_estimate> winmin)%>%
select(pic_id,measured_radius)
oto_inc_fit<-semi_join(oto_no_edge,inc_fit,by=c("pic_id","measured_radius"))
# Apply lm on filtered data -----------------------------------------------
#first the summarized version
YS<-20
YSdays<-12
oto_filtered_model<-all_model_info(oto_inc_fit,c("pic_id","measured_radius"),"dist_btw_markers","dist_to_center")
temp<-oto_inc_fit%>%ungroup()%>%
group_by(pic_id,measured_radius)%>%
summarize(radius=mean(radius))%>%
select(pic_id,measured_radius,radius)
oto_filtered_model<-left_join(oto_filtered_model,temp,by=c("pic_id","measured_radius"))%>%
mutate(mean_increment = abs(slope_estimate) * (((radius-YS)/2)+YS) + inc_estimate,
age = ((radius-YS)/mean_increment) + YSdays,
larvae_id = substr(pic_id,1,17),
KorTobis_sample_id = substr(pic_id,1,14),
right_left = substr(pic_id,22,22),
YS = rep(YS,dim(oto_filtered_model)[1]),
YSdays = rep(YSdays,dim(oto_filtered_model)[1]))
#and model info for each point
oto_augment<-oto_inc_fit%>% ungroup()%>%
group_by(pic_id,measured_radius) %>%
do(augment(lm(dist_btw_markers~dist_to_center, data = .)))%>%
select(-dist_btw_markers,-dist_to_center)
oto_filtered_all <-cbind(oto_inc_fit,oto_augment%>%ungroup()%>%select(-pic_id,-measured_radius))
# Selection for next script -----------------------------------------------
ALL_DATA2<-oto_filtered_model%>%
select(YS,YSdays,pic_id,int=inc_estimate,slope=slope_estimate,r2=model_r.squared,n,radius,age,measured_radius,larvae_id,KorTobis_sample_id,right_left)
oto_rad1 <- filter(ALL_DATA2,measured_radius==1)
oto_rad2 <- filter(ALL_DATA2, measured_radius==2)
#subset and select columns
oto1v<-subset(oto_rad1,right_left=="v",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto1v)<-c("larvae_id","pic_id_1_v","int_1_v", "slope_1_v", "r2_1_v", "n_1_v", "radius_1_v", "age_1_v")
oto1h<-subset(oto_rad1,right_left=="h",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto1h)<-c("larvae_id","pic_id_1_h","int_1_h", "slope_1_h", "r2_1_h", "n_1_h", "radius_1_h", "age_1_h")
oto2v<-subset(oto_rad2,right_left=="v",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto2v)<-c("larvae_id","pic_id_2_v","int_2_v", "slope_2_v", "r2_2_v", "n_2_v", "radius_2_v", "age_2_v")
oto2h<-subset(oto_rad2,right_left=="h",select=c("larvae_id","pic_id","int", "slope", "r2", "n", "radius", "age"))
colnames(oto2h)<-c("larvae_id","pic_id_2_h","int_2_h", "slope_2_h", "r2_2_h", "n_2_h", "radius_2_h", "age_2_h")
#list of larvae names
larvae<-unique(oto_raw$larvae_id)
larvae<-as.data.frame(larvae)
colnames(larvae)<-c("larvae_id")
temp1<-merge(larvae,oto1v,by="larvae_id",all.x=TRUE)
#dim(temp1)
temp2<-merge(temp1,oto1h,by="larvae_id",all.x=TRUE)
#dim(temp2)
temp3<-merge(temp2,oto2v,by="larvae_id",all.x=TRUE)
#dim(temp3)
temp4<-merge(temp3,oto2h,by="larvae_id",all.x=TRUE)
temp4$KorTobis_sample_id<-substr(temp4$larvae_id,1,14)
ALL_DATA_larvae_id<-temp4
remove(temp1,temp2,temp3,temp4,oto_rad1,oto_rad2,larvae,oto2h,oto2v,oto1h,oto1v)
source("ALL_DATA_larvae_id.R")
source("best_ages.R")
source("Assembly_length_meta_area.R")
###
# load the function "all_model_info.R" used to extract all model information from
# the linear models between distance to centre of otolith and the ringwidth
# this supplies among a lot of other model information handy for evaluation the
# slope and intercept for further use and selection. The function extracts the
# model values from the lm list object and puts them into a more handy dataframe
# format.
###
source("all_model_info.R")
library(broom)
# If you want to filter edge of otholith ----------------------------------
temp1<-oto2%>%filter(measured_radius==1, dist_to_center <= 0.90*radius_1_length)
temp2<-oto2%>%filter(measured_radius==2, dist_to_center <= 0.90*radius_2_length)
oto_no_edge <- rbind(temp1,temp2)
remove(temp1,temp2)
# Filter by intercept window at 20mu distance to center--------------------
winmax <- max(oto2%>%ungroup()%>%filter(dist_to_center<21,dist_to_center>19)%>%select(dist_btw_markers))
winmin <- min(oto2%>%ungroup()%>%filter(dist_to_center<21,dist_to_center>19)%>%select(dist_btw_markers))
oto_dist_minus_20<-oto_no_edge%>%mutate(dist_to_center=dist_to_center-20)
minus20<-all_model_info(oto_dist_minus_20,c("pic_id","measured_radius"),"dist_btw_markers","dist_to_center")
inc_fit<-minus20%>%filter(inc_estimate< winmax,inc_estimate> winmin)%>%
select(pic_id,measured_radius)
oto_inc_fit<-semi_join(oto_no_edge,inc_fit,by=c("pic_id","measured_radius"))
# Apply lm on filtered data -----------------------------------------------
#first the summarized version
YS<-20
YSdays<-12
oto_filtered_model<-all_model_info(oto_inc_fit,c("pic_id","measured_radius"),"dist_btw_markers","dist_to_center")
temp<-oto_inc_fit%>%ungroup()%>%
group_by(pic_id,measured_radius)%>%
summarize(radius=mean(radius))%>%
select(pic_id,measured_radius,radius)
oto_filtered_model<-left_join(oto_filtered_model,temp,by=c("pic_id","measured_radius"))%>%
mutate(mean_increment = abs(slope_estimate) * (((radius-YS)/2)+YS) + inc_estimate,
age = ((radius-YS)/mean_increment) + YSdays,
larvae_id = substr(pic_id,1,17),
KorTobis_sample_id = substr(pic_id,1,14),
right_left = substr(pic_id,22,22),
YS = rep(YS,dim(oto_filtered_model)[1]),
YSdays = rep(YSdays,dim(oto_filtered_model)[1]))
#and model info for each point
oto_augment<-oto_inc_fit%>% ungroup()%>%
group_by(pic_id,measured_radius) %>%
do(augment(lm(dist_btw_markers~dist_to_center, data = .)))%>%
select(-dist_btw_markers,-dist_to_center)
oto_filtered_all <-cbind(oto_inc_fit,oto_augment%>%ungroup()%>%select(-pic_id,-measured_radius))
# Selection for next script -----------------------------------------------
ALL_DATA2<-oto_filtered_model%>%
select(YS,YSdays,pic_id,int=inc_estimate,slope=slope_estimate,r2=model_r.squared,n,radius,age,measured_radius,larvae_id,KorTobis_sample_id,right_left)
#Rearange data in ALL_DATA2 so each radius and right/left otolith gets own columns
source("ALL_DATA_larvae_id.R")
#Selects best age estimates on basis of highest number of increments in estimate, hereafter higher age
#both for first and second radius, output is "best_ages"
source("best_ages.R")
#Assembles metadata with best_ages and adds meta output is best_ages_inc, adds meta to oto2 and selects its rows
#based on best_ages_inc with mach by pic_id and measured radius, output is oto_best_inc.
source("Assembly_length_meta_area.R")
best_ages<-best_ages%>%group_by(pic_id,measured_radius)
oto_filtered_all<-oto_filtered_all%>%group_by(pic_id,measured_radius)
#Makes congruence between larvae in best_ages_inc and the version with all marks etc included
oto4<-inner_join(oto_filtered_all,best_ages_inc %>%select(-KorTobis_sample_id,-radius,-larvae_id,-age,-slope,-magnification),by=c("pic_id", "measured_radius"))%>%
mutate(hatch_year=year)
oto5<-inner_join(oto_filtered_model,best_ages_inc %>%
select(-KorTobis_sample_id,-radius,-larvae_id,-age,-magnification,-n),
by=c("pic_id", "measured_radius", "right_left"))%>%
select(-slope_estimate,-inc_estimate,-model_r.squared,-YS,-YSdays)
#write.csv(oto5,file=("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\otolith_filtered.csv"),row.names=FALSE)
#write.csv(oto4,file=("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\otolith_filtered_all_marks.csv"),row.names=FALSE)
rm(larvae,num_columns,winmax,winmin,oto_augment,temp,temp1,temp2,temp3,temp4,OUT,OUTF1,OUTF2,YS,YSdays,d,i,id,minus20,oto1h,oto1v,oto2h,oto2v,oto_rad1,oto_rad2)
# Use Mikaels method (almost!! this utilizes the point distance to regression line)---------------
# plus_fit<-oto2 %>% ungroup(.)%>%
#       arrange(pic_id,measured_radius,mark_no)%>%
#       group_by(pic_id,measured_radius) %>%
#       do(augment (lm(dist_btw_markers ~ dist_to_center, data = .)))%>%
#       ungroup(.)%>%
#       select(.fitted,.se.fit,.resid,.hat,.sigma,.cooksd,.std.resid)
# oto_plus_fitA<-cbind(oto2,plus_fit)
#
# oto_plus_fitB <- all_model_info(oto2,c("pic_id","measured_radius"),"dist_btw_markers","dist_to_center")
# oto_plus_fit <- left_join(oto_plus_fitA,oto_plus_fitB,by=c("pic_id","measured_radius"))
# oto_plus_fit<-oto_plus_fit %>% mutate(dist_to_line = abs(slope_estimate*dist_to_center+inc_estimate-dist_btw_markers)/sqrt(slope_estimate^2+1))
# oto_plus_fit<-oto_plus_fit %>% filter(dist_to_line < 1)
# remove(plus_fit,oto_plus_fitA,oto_plus_fitB)
#  ------------------------------------------------------------------------
#remove(inc_fit,minus20,oto_dist_minus_20,winmax,winmin)
source("raw-larvae-otolith-data-manipulation-1.R")
source("mytry6.R")
View(oto_filtered_model)
View(best_ages_inc)
View(best_ages_inc)
```{r}
source("raw-larvae-otolith-data-manipulation-1.R")
source("mytry6.R")
View(oto_filtered_all)
data <- read.csv("raw_larvae_otolith_measurements.csv",header=TRUE,sep=',',na.strings=c("NA"),)
data <- read.csv("otolith_filtered.csv",header=TRUE,sep=',',na.strings=c("NA"),)
View(data)
data <- read.csv("otolith_filtered_all_marks.csv",header=TRUE,sep=',',na.strings=c("NA"),)
install.packages("mapdage")
packrat::snapshot(prompt = FALSE)
install.packages("maps")
source("manipulation-1-raw-larvae-otolith-data.R")
source("manipulation-2-bestage-selection-and-more.R")
# Indlæser Maps library ---------------------------------------------------
library("maps")
library("mapdata")
# Indlæser MIK filer ------------------------------------------------------
farivar_map<-read.csv("map_farivar.csv",sep=",",header=T)
sample_id<-oto5%>%select(KorTobis_sample_id)%>%distinct(KorTobis_sample_id)
relevant_meta<-semi_join(meta,sample_id)
fishery<-farivar_map%>%filter(fishery_dredge=="Fishery")
dredge<-farivar_map%>%filter(fishery_dredge=="Dredge")
###################### MAP PLOT #######################
###################### MAP ###########################
#windows()
#par(mar=c(2.3,2.1,1,1))
par(mar=c(3,3,1,0.5))
long<- -8:11
lati<- 45:64
xlimit=c(-1,11)
ylimit=c(52,59)
plot(long,lati, xlim=xlimit,ylim=ylimit,col = "red", cex = 0, pch = 16, add=TRUE,xlab = "",ylab = "",cex.axis=1.3,mgp = c(1, 0.2, 0),tck=0.00)
lon<- c(1,3,6)
lat<-c(55.6,56,57.5)
area<-c("Dogger Bank (DB)","Elbow Spit (ES)", "Fisher Bank (FB)")
areas<-data.frame(area,lon,lat)
map("worldHires",xlim=xlimit,ylim=ylimit, col = "grey90", fill=TRUE,add=TRUE)
points(relevant_meta$stlondec,relevant_meta$stlatdec,col="black",pch=1,cex=1.2)
points(fishery$lonPosStartDec,fishery$latPosStartDec,col="black",pch=3,cex=1.2)
points(dredge$lonPosStartDec,dredge$latPosStartDec,col="black",pch=2,cex=1.2)
text(areas$lon,areas$lat,areas$area, cex = 1.2, col="black")
box()
legend("topleft",c("Larvae","Pre-winter","Post-winter"),pch=c(1,2,3),pt.cex=1.2,cex=1.2)
mtext("Latitude", side=2, line=1.4, cex=1.2)
mtext("Longitude", side=1, line=1.3, cex=1.2)
rm(farivar_map,sample_id,relevant_meta,fishery,dredge,lat,lon,area,long,lati,xlimit,ylimit)
install.packages("mapdata")
# Indlæser Maps library ---------------------------------------------------
library("maps")
library("mapdata")
# Indlæser MIK filer ------------------------------------------------------
farivar_map<-read.csv("map_farivar.csv",sep=",",header=T)
sample_id<-oto5%>%select(KorTobis_sample_id)%>%distinct(KorTobis_sample_id)
relevant_meta<-semi_join(meta,sample_id)
fishery<-farivar_map%>%filter(fishery_dredge=="Fishery")
dredge<-farivar_map%>%filter(fishery_dredge=="Dredge")
###################### MAP PLOT #######################
###################### MAP ###########################
#windows()
#par(mar=c(2.3,2.1,1,1))
par(mar=c(3,3,1,0.5))
long<- -8:11
lati<- 45:64
xlimit=c(-1,11)
ylimit=c(52,59)
plot(long,lati, xlim=xlimit,ylim=ylimit,col = "red", cex = 0, pch = 16, add=TRUE,xlab = "",ylab = "",cex.axis=1.3,mgp = c(1, 0.2, 0),tck=0.00)
lon<- c(1,3,6)
lat<-c(55.6,56,57.5)
area<-c("Dogger Bank (DB)","Elbow Spit (ES)", "Fisher Bank (FB)")
areas<-data.frame(area,lon,lat)
map("worldHires",xlim=xlimit,ylim=ylimit, col = "grey90", fill=TRUE,add=TRUE)
points(relevant_meta$stlondec,relevant_meta$stlatdec,col="black",pch=1,cex=1.2)
points(fishery$lonPosStartDec,fishery$latPosStartDec,col="black",pch=3,cex=1.2)
points(dredge$lonPosStartDec,dredge$latPosStartDec,col="black",pch=2,cex=1.2)
text(areas$lon,areas$lat,areas$area, cex = 1.2, col="black")
box()
legend("topleft",c("Larvae","Pre-winter","Post-winter"),pch=c(1,2,3),pt.cex=1.2,cex=1.2)
mtext("Latitude", side=2, line=1.4, cex=1.2)
mtext("Longitude", side=1, line=1.3, cex=1.2)
rm(farivar_map,sample_id,relevant_meta,fishery,dredge,lat,lon,area,long,lati,xlimit,ylimit)
station_rename<- read.table("station_rename.csv", header=TRUE, sep=",", na.strings="NA", dec=".")
View(oto_dist_minus_20)
rm(larvae,num_columns,winmax,winmin,oto_augment,temp,temp1,temp2,temp3,temp4,OUT,OUTF1,OUTF2,YS,YSdays,d,i,id,minus20,oto1h,oto1v,oto2h,oto2v,oto_rad1,oto_rad2,oto_inc_fit,oto_dist_minus_20,oto_best_inc)
View(areas)
rm(larvae,num_columns,winmax,winmin,oto_augment,temp,temp1,temp2,temp3,temp4,OUT,OUTF1,OUTF2,YS,YSdays,d,i,id,minus20,oto1h,oto1v,oto2h,oto2v,oto_rad1,oto_rad2,oto_inc_fit,oto_dist_minus_20,oto_best_inc,ALL_DATA2,ALL_DATA_larvae_id)
rm(farivar_map,sample_id,relevant_meta,fishery,dredge,lat,lon,area,areas,long,lati,xlimit,ylimit)
rm(larvae,num_columns,winmax,winmin,oto_augment,temp,temp1,temp2,temp3,temp4,OUT,OUTF1,OUTF2,YS,YSdays,d,i,id,minus20,oto1h,oto1v,oto2h,oto2v,oto_rad1,oto_rad2,oto_inc_fit,oto_dist_minus_20,oto_best_inc,ALL_DATA2,ALL_DATA_larvae_id,inc_fit)
View(best_ages)
View(best_ages_inc)
rm(larvae,num_columns,winmax,winmin,oto_augment,temp,temp1,temp2,temp3,temp4,OUT,OUTF1,OUTF2,YS,YSdays,d,i,id,minus20,oto1h,oto1v,oto2h,oto2v,oto_rad1,oto_rad2,oto_inc_fit,oto_dist_minus_20,oto_best_inc,ALL_DATA2,ALL_DATA_larvae_id,inc_fit,best_ages,best_ages_inc)
rm(larvae,num_columns,winmax,winmin,oto_augment,temp,temp1,temp2,temp3,temp4,OUT,OUTF1,OUTF2,YS,YSdays,d,i,id,minus20,oto1h,oto1v,oto2h,oto2v,oto_rad1,oto_rad2,oto_inc_fit,oto_dist_minus_20,oto_best_inc,ALL_DATA2,ALL_DATA_larvae_id,inc_fit,best_ages,best_ages_inc,oto_no_edge)
library(nlme)
library(ggplot2)
data <- oto5
data2 <- oto4
station_rename<- read.table("station_rename.csv", header=TRUE, sep=",", na.strings="NA", dec=".")
d <- subset(data,measured_radius == 1 & slope > 0 & slope<0.075)
d$year<-factor(d$year)
#short names for stations added
d<-d%>%left_join(.,station_rename,by="KorTobis_sample_id")%>%mutate(st_shortname=paste(as.character(area),st_shortname,sep=""))
d2<-subset(data2,measured_radius==1)
d$st_shortname<-factor(d$st_shortname)
d<-filter(d,!larvae_id%in%c("CY_38_02-05-06_02","CY_25_22-04-06_18","CY_37_01-05-06_18","PK_09_21-04-08_19"))
all08<-d%>%filter(year==2008)
all09<-d%>%filter(year==2009)
all06<-d%>%filter(year==2006)
d_no_NA<-filter(d,!is.na(sd_lgd))
@
<<length_data,echo=FALSE, results='hide', warning=FALSE ,message=FALSE,cashe=TRUE>>=
length_dist<-read.csv("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\Larvae_length_distribution.csv",header=TRUE,sep=',',na.strings=c("NA"))
larvaelength2 <- read.csv("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\KorTobis_larvelgd2_sdl2.csv",header=TRUE,sep=',',na.strings=c("NA"))
meta<-read.csv("C:\\EFF_korttidsprog_tobis\\Larve_otolitter\\R-csv_files\\KorTobis_metadata.csv",header=TRUE,sep=',',na.strings=c("NA"))
meta<-select(meta,KorTobis_sample_id,posixct_time,year,monthh,dayy,st_hour,st_min,stlondec,stlatdec)
larvaelength2$KorTobis_sample_id<-substr(larvaelength2$larvae_id,1,14)
larvaelength2<-merge(larvaelength2,meta,by="KorTobis_sample_id", all.x=TRUE)
#extract larvae length from 2008 samples
larvaelength2008<-larvaelength2%>%
mutate(sub_sample=rep(1,dim(larvaelength2)[1]))%>%
filter(year==2008,!is.na(sd_lgd))%>%
select(KorTobis_sample_id,sub_sample,sd_lgd)
length_dist2 <- rbind(length_dist,larvaelength2008)
areafun<-function(x){if (x < 2.7){
"DB"
} else if (x>5){
"FB"
}else{
"ES"
}
}
####### Merge with meta data and apply area
length_dist2<-merge(length_dist2,meta,by="KorTobis_sample_id", all.x=TRUE)
length_dist2$area<-unlist(lapply(length_dist2$stlondec,areafun))
length_dist2<-length_dist2%>%
left_join(.,station_rename,by="KorTobis_sample_id")%>%
mutate(st_shortname=paste(as.character(area),st_shortname,sep=""),
st_julian_day = as.POSIXlt(as.character(posixct_time),format="%Y%m%d")$yday)
########
l_06<-length_dist2%>%filter(year==2006)
l_08<-length_dist2%>%filter(year==2008)
l_09<-length_dist2%>%filter(year==2009)
###########
cDB06<-coef(all06%>%filter(area=="DB")%>%lm(age~sd_lgd,data=.))
cDB08<-coef(all08%>%filter(area=="DB")%>%lm(age~sd_lgd,data=.))
cDB09<-coef(all09%>%filter(area=="DB")%>%lm(age~sd_lgd,data=.))
cES06<-coef(all06%>%filter(area=="ES")%>%lm(age~sd_lgd,data=.))
cES08<-coef(all08%>%filter(area=="ES")%>%lm(age~sd_lgd,data=.))
cES09<-coef(all09%>%filter(area=="ES")%>%lm(age~sd_lgd,data=.))
cFB08<-coef(all08%>%filter(area=="FB")%>%lm(age~sd_lgd,data=.))
cFB09<-coef(all09%>%filter(area=="FB")%>%lm(age~sd_lgd,data=.))
l_06DB<-l_06%>%filter(area=="DB")%>%mutate(age=sd_lgd*cDB06[2]+cDB06[1])
l_08DB<-l_08%>%filter(area=="DB")%>%mutate(age=sd_lgd*cDB08[2]+cDB08[1])
l_09DB<-l_09%>%filter(area=="DB")%>%mutate(age=sd_lgd*cDB09[2]+cDB09[1])
l_06ES<-l_06%>%filter(area=="ES")%>%mutate(age=sd_lgd*cES06[2]+cES06[1])
l_08ES<-l_08%>%filter(area=="ES")%>%mutate(age=sd_lgd*cES08[2]+cES08[1])
l_09ES<-l_09%>%filter(area=="ES")%>%mutate(age=sd_lgd*cES09[2]+cES09[1])
l_08FB<-l_08%>%filter(area=="FB")%>%mutate(age=sd_lgd*cFB08[2]+cFB08[1])
l_09FB<-l_09%>%filter(area=="FB")%>%mutate(age=sd_lgd*cFB09[2]+cFB09[1])
l_06 <- bind_rows(l_06DB,l_06ES)
l_08 <- bind_rows(l_08DB,l_08ES,l_08FB)
l_09 <- bind_rows(l_09DB,l_09ES,l_09FB)
